name: bne-guard-vpn
version: 1.0.0
summary: BNE GUARD VPN BY BNESIM
description: |
  ACCESS YOUR FAVORITE CONTENT
  BNE Guard VPN allows you to access your favorite content without any hassle. With our app, you can bypass geo-restrictions and access content that may not be available in your country.
  Whether you want to stream your favorite TV show, watch a movie, or access a social media platform thatâ€™s blocked in your location, BNE Guard VPN has got you covered.

grade: stable
confinement: classic
base: core22

slots:
  dbus-bne-guard-vpn:
    interface: dbus
    bus: system
    name: com.bnesim.bneguard

apps:
  bne-guard-vpn:
    command: bin/bneguard
    command-chain: [bin/launcher]
    desktop: bin/data/flutter_assets/assets/bne-guard-vpn.desktop
    environment:
      PATH: $SNAP/usr/bin:$SNAP/bin:$PATH
      LIBGL_DRIVERS_PATH: $SNAP/usr/lib/$CRAFT_ARCH_TRIPLET/dri
      GIO_MODULE_DIR: $SNAP/usr/lib/$CRAFT_ARCH_TRIPLET/gio/modules
      LIVE_RUN: 1
      LOG_LEVEL: debug
      SNAP_PYTHON: python3
    slots:
      - dbus-bne-guard-vpn

parts:
  curtin:
    plugin: nil
    source: https://git.launchpad.net/curtin
    source-type: git
    source-commit: 611f68afdc53c7c6d02bd64713c743380a77c59e
    override-pull: |
      craftctl default
      PACKAGED_VERSION="$(git describe --long --abbrev=9 --match=[0-9][0-9]*)"
      sed -e "s,@@PACKAGED_VERSION@@,$PACKAGED_VERSION,g" -i curtin/version.py
    override-build: &pyinstall |
      # We install without dependencies because all dependencies come from
      # archive packages.
      # XXX: On core22, running `pip3 install --prefix xxx` does not do the
      # right thing. The package ends up installed in xxx/local and the modules
      # get installed to dist-packages instead of site-packages.
      # See https://discuss.python.org/t/18240
      # As a workaround, we use a fake user install to get the package
      # installed in the expected place.
      PYTHONUSERBASE="$CRAFT_PART_INSTALL" pip3 install --user --no-dependencies .
    build-packages:
      - python3-pip
    organize:
      lib/python*/site-packages/usr/lib/curtin: usr/lib/

  flutter-git:
    source: https://github.com/flutter/flutter.git
    source-branch: stable
    source-depth: 1
    plugin: nil
    override-build: |
      mkdir -p $CRAFT_PART_INSTALL/usr/bin
      mkdir -p $CRAFT_PART_INSTALL/usr/libexec
      cp -r $CRAFT_PART_SRC $CRAFT_PART_INSTALL/usr/libexec/flutter
      ln -s $CRAFT_PART_INSTALL/usr/libexec/flutter/bin/flutter $CRAFT_PART_INSTALL/usr/bin/flutter
      $CRAFT_PART_INSTALL/usr/bin/flutter doctor
    build-packages:
      - clang
      - cmake
      - curl
      - libgtk-3-dev
      - ninja-build
      - unzip
      - xz-utils
      - zip
      - libjsoncpp-dev
      - libayatana-appindicator3-dev
    override-prime: ''

  bne-guard-vpn:
    after: [flutter-git]
    source: .
    plugin: nil
    build-attributes: [enable-patchelf]
    override-build: |
      set -eux
      mkdir -p $CRAFT_PART_INSTALL/bin/lib
      cp snap/local/launcher $CRAFT_PART_INSTALL/bin/
      # https://github.com/canonical/ubuntu-desktop-installer/issues/1146
      # (cd vendor/ubuntu-desktop-provision/packages/ubuntu_wizard && flutter pub get)
      cd packages/bnegurad
      flutter clean
      flutter pub get
      flutter build linux --release -v
      cp -r build/linux/*/release/bundle/* $CRAFT_PART_INSTALL/bin/
      cp -r wireguard-tools $CRAFT_PART_INSTALL/bin/

  libraries:
    plugin: nil
    build-attributes: [enable-patchelf]
    stage-packages:
      - libatk1.0-0
      - libcairo-gobject2
      - libcairo2
      - libegl-mesa0
      - libegl1
      - libgl1
      - libglib2.0-0
      - libglib2.0-dev
      - libgtk-3-0
      - libpango-1.0-0
      - libpangocairo-1.0-0
      - libpng16-16
      - libwayland-egl1
      - libx11-6
      - libdatrie1
      - libdrm2
      - libgbm1
      - libglapi-mesa
      - libgraphite2-3
      - libxshmfence1
      - libpciaccess0
      - libvulkan1
      - shared-mime-info
      - libglib2.0-bin
      - libibus-1.0-5
      - libjsoncpp-dev
      - libayatana-appindicator3-dev
    prime:
      - usr/lib/*/libEGL*.so.*
      - usr/lib/*/libGL*.so.*
      - usr/lib/*/libX*.so.*
      - usr/lib/*/liba*.so.*
      - usr/lib/*/libcairo*.so.*
      - usr/lib/*/libe*.so.*
      - usr/lib/*/libf*.so.*
      - usr/lib/*/libg*.so.*
      - usr/lib/*/libharfbuzz*.so.*
      - usr/lib/*/libibus*.so.*
      - usr/lib/*/libpango*.so.*
      - usr/lib/*/libpixman*.so.*
      - usr/lib/*/libpng*.so.*
      - usr/lib/*/libthai*.so.*
      - usr/lib/*/libwayland*.so.*
      - usr/lib/*/libxcb*.so.*
      - usr/lib/*/libxkb*.so.*
      - usr/lib/*/libdatrie*.so.*
      - usr/lib/*/libdrm*.so.*
      - usr/lib/*/libgbm*.so.*
      - usr/lib/*/libglapi*.so.*
      - usr/lib/*/libgraphite2*.so.*
      - usr/lib/*/libxshmfence*.so.*
      - usr/lib/*/libpciaccess*.so.*
      - usr/lib/*/libsensors*.so.*
      - usr/lib/*/libvulkan*.so.*
      - usr/share/glvnd/egl_vendor.d
      - usr/lib/*/gdk-pixbuf-2.0
      - usr/lib/*/
      - usr/bin/update-mime-database
      - usr/bin/g*
      - usr/share/mime
      - -usr/lib/*/pkgconfig
      - -usr/lib/pkgconfig
      - -usr/share/pkgconfig
      - usr/lib/*/libsecr*
      - usr/lib/*/libjson*
      - usr/lib/*/libjsoncpp.25.so.*
      - usr/lib/*/libayatana-appindicator3.so.*

  dri-no-patchelf:
    after: [libraries]
    plugin: nil
    stage-packages:
      - libgl1-mesa-dri
      - libayatana-appindicator3-dev
    build-attributes:
      - no-patchelf # Otherwise snapcraft may strip the build ID and cause the driver to crash
    stage:
      - usr/lib/${CRAFT_ARCH_TRIPLET}/dri
      - usr/share/drirc.d
